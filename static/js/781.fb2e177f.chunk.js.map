{"version":3,"file":"static/js/781.fb2e177f.chunk.js","mappings":"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","sources":["components/Exercises/utils/helperUtils.js","components/Exercises/utils/thresholds.js","components/Exercises/BicepsCurl.jsx"],"sourcesContent":["// General utility functions\r\n\r\nexport const getLandmarkPosition = (landmark, frameWidth, frameHeight) => ({\r\n  x: landmark.x * frameWidth,\r\n  y: landmark.y * frameHeight,\r\n});\r\n\r\nexport const getLandmarkFeatures = (poseLandmarks,feature,frameWidth,frameHeight) => {\r\n  const dictFeatures = {\r\n    nose: 0,\r\n    left: {\r\n      shoulder: 11,\r\n      elbow: 13,\r\n      wrist: 15,\r\n      hip: 23,\r\n      knee: 25,\r\n      ankle: 27,\r\n      foot: 31,\r\n    },\r\n    right: {\r\n      shoulder: 12,\r\n      elbow: 14,\r\n      wrist: 16,\r\n      hip: 24,\r\n      knee: 26,\r\n      ankle: 28,\r\n      foot: 32,\r\n    },\r\n  };\r\n\r\n  if (feature === \"nose\") {\r\n    return getLandmarkPosition(\r\n      poseLandmarks[dictFeatures.nose],\r\n      frameWidth,\r\n      frameHeight\r\n    );\r\n  } else if (feature === \"left\" || feature === \"right\") {\r\n    const featureSet = dictFeatures[feature];\r\n    return {\r\n      shoulder: getLandmarkPosition(\r\n        poseLandmarks[featureSet.shoulder],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      elbow: getLandmarkPosition(\r\n        poseLandmarks[featureSet.elbow],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      wrist: getLandmarkPosition(\r\n        poseLandmarks[featureSet.wrist],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      hip: getLandmarkPosition(\r\n        poseLandmarks[featureSet.hip],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      knee: getLandmarkPosition(\r\n        poseLandmarks[featureSet.knee],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      ankle: getLandmarkPosition(\r\n        poseLandmarks[featureSet.ankle],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      foot: getLandmarkPosition(\r\n        poseLandmarks[featureSet.foot],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n    };\r\n  } else {\r\n    throw new Error(\"Feature must be 'nose', 'left', or 'right'.\");\r\n  }\r\n};\r\n\r\nexport const dot = (v1, v2) => v1.x * v2.x + v1.y * v2.y;\r\n\r\nexport const magnitude = (v) => Math.sqrt(v.x * v.x + v.y * v.y);\r\n\r\nexport const findAngle = (p1, p2, refPt = { x: 0, y: 0 }) => {\r\n  const p1Ref = { x: p1.x - refPt.x, y: p1.y - refPt.y };\r\n  const p2Ref = { x: p2.x - refPt.x, y: p2.y - refPt.y };\r\n\r\n  const cosTheta = dot(p1Ref, p2Ref) / (magnitude(p1Ref) * magnitude(p2Ref));\r\n  const theta = Math.acos(Math.max(Math.min(cosTheta, 1.0), -1.0));\r\n  return Math.round(theta * (180 / Math.PI));\r\n};\r\n\r\nexport const drawRoundedRect = (\r\n  ctx,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  fillColor\r\n) => {\r\n  ctx.fillStyle = fillColor;\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + radius, y);\r\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\r\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\r\n  ctx.arcTo(x, y + height, x, y, radius);\r\n  ctx.arcTo(x, y, x + width, y, radius);\r\n  ctx.closePath();\r\n  ctx.fill();\r\n};\r\n\r\nexport const drawText = (ctx, msg, x, y, options = {}) => {\r\n  const {\r\n    boxWidth = 8,\r\n    textColor = \"rgb(0, 255, 0)\",\r\n    backgroundColor = \"rgb(0, 0, 0)\",\r\n    fontSize = \"16px\",\r\n    fontFamily = \"Arial\",\r\n    paddingX = 20,\r\n    paddingY = 10,\r\n  } = options;\r\n\r\n  ctx.font = `${fontSize} ${fontFamily}`;\r\n  const textMetrics = ctx.measureText(msg);\r\n  const textWidth = textMetrics.width;\r\n  const textHeight = parseInt(fontSize, 10);\r\n\r\n  const rectStartX = x - paddingX;\r\n  const rectStartY = y - textHeight - paddingY;\r\n  const rectWidth = textWidth + 2 * paddingX;\r\n  const rectHeight = textHeight + 2 * paddingY;\r\n\r\n  drawRoundedRect(\r\n    ctx,\r\n    rectStartX,\r\n    rectStartY,\r\n    rectWidth,\r\n    rectHeight,\r\n    boxWidth,\r\n    backgroundColor\r\n  );\r\n  ctx.fillStyle = textColor;\r\n  ctx.fillText(msg, x, y + paddingY / 2);\r\n};\r\n\r\nexport const drawCircle = (ctx, position, radius, color) => {\r\n  ctx.beginPath();\r\n  ctx.arc(position.x, position.y, radius, 0, 2 * Math.PI);\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n};\r\n\r\nexport const drawConnector = (ctx, start, end, color, lineWidth) => {\r\n  ctx.beginPath();\r\n  ctx.moveTo(start.x, start.y);\r\n  ctx.lineTo(end.x, end.y);\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.stroke();\r\n};\r\n\r\nexport const drawDottedLine = (ctx, start, end, color) => {\r\n  const lineLength = Math.sqrt((end.x - start.x) ** 2 + (end.y - start.y) ** 2);\r\n  const dotSpacing = 5;\r\n  const numOfDots = Math.floor(lineLength / dotSpacing);\r\n\r\n  for (let i = 0; i < numOfDots; i++) {\r\n    const dotX = start.x + ((end.x - start.x) / numOfDots) * i;\r\n    const dotY = start.y + ((end.y - start.y) / numOfDots) * i;\r\n    ctx.beginPath();\r\n    ctx.arc(dotX, dotY, 1, 0, 2 * Math.PI);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n  }\r\n};\r\n\r\nexport const colors = {\r\n  blue: 'rgb(0,127,255)',\r\n  red: 'rgb(255,50,50)',\r\n  green: 'rgb(0,255,127)',\r\n  light_green: 'rgb(100,233,127)',\r\n  yellow: 'rgb(255,255,0)',\r\n  magenta: 'rgb(255,0,255)',\r\n  white: 'rgb(255,255,255)',\r\n  cyan: 'rgb(0,255,255)',\r\n  light_blue: 'rgb(102,204,255)'\r\n};","// BICEPS CURL\r\nexport const thresholdsBicepsCurl = {\r\n    ANGLE_ELBOW: {\r\n      NORMAL: [0, 20],  // Kol tamamen açık (dinlenme durumu)\r\n      TRANS: [21, 70],  // Kol kısmen bükülmüş (geçiş durumu)\r\n      PASS: [71, 140]   // Kol tamamen bükülmüş (tam biceps curl)\r\n    },\r\n    ELBOW_THRESH: [10, 140],  // Minimum ve maksimum bükülme açısı\r\n    INACTIVE_THRESH: 10.0,    // Hareketin inaktif olabileceği maksimum süre (saniye)\r\n    CNT_FRAME_THRESH: 30      // Geri bildirim için gereken minimum kare sayısı\r\n};\r\n/*------------------------------- SQUAT-------------------------------------- */\r\n//\r\nexport const thresholdsSquatBeginner = {\r\n  ANGLE_HIP_KNEE_VERT: {\r\n      NORMAL: [0, 32],\r\n      TRANS: [35, 65],\r\n      PASS: [70, 95]\r\n  },\r\n  HIP_THRESH: [10, 50],\r\n  ANKLE_THRESH: 45,\r\n  KNEE_THRESH: [50, 70, 95],\r\n  OFFSET_THRESH: 35.0,\r\n  INACTIVE_THRESH: 15.0,\r\n  CNT_FRAME_THRESH: 50\r\n};\r\n\r\nexport const thresholdsSquatPro = {\r\n  ANGLE_HIP_KNEE_VERT: {\r\n      NORMAL: [0, 32],\r\n      TRANS: [35, 65],\r\n      PASS: [80, 95]\r\n  },\r\n  HIP_THRESH: [15, 50],\r\n  ANKLE_THRESH: 30,\r\n  KNEE_THRESH: [50, 80, 95],\r\n  OFFSET_THRESH: 35.0,\r\n  INACTIVE_THRESH: 15.0,\r\n  CNT_FRAME_THRESH: 50\r\n};\r\n/*------------------------------- SQUAT-------------------------------------- */\r\n\r\n/*------------------------------- CRUNCH-------------------------------------- */\r\n\r\nexport const thresholdsCrunchBeginner = {\r\n  ANGLE_SHOULDER_HIP_VERT: {\r\n      NORMAL: [30, 60], // Doğru crunch açısı\r\n      TRANS: [61, 75],  // Geçiş açısı\r\n      PASS: [76, 90],   // Maksimum kabul edilebilir açılar\r\n  },\r\n  HIP_THRESH: [0, 10], // Kalça kalkış açısı\r\n  NECK_THRESH: [10, 30], // Boyun doğal pozisyon açısı\r\n  INACTIVE_THRESH: 10.0, // İnaktiflik süresi\r\n  CNT_FRAME_THRESH: 50 // Geri bildirim süresi\r\n};\r\n\r\nexport const thresholdsCrunchPro = {\r\n  ANGLE_SHOULDER_HIP_VERT: {\r\n      NORMAL: [35, 55],\r\n      TRANS: [56, 70],\r\n      PASS: [71, 85],\r\n  },\r\n  HIP_THRESH: [0, 5],\r\n  NECK_THRESH: [5, 20],\r\n  INACTIVE_THRESH: 8.0,\r\n  CNT_FRAME_THRESH: 50\r\n};\r\n\r\n/*------------------------------- CRUNCH-------------------------------------- */\r\n\r\n\r\n/*-------------------------------SHOULDER PRESS----------------------------------- */\r\nexport const thresholdsShoulderPress = {\r\n  ANGLE_SHOULDER_ELBOW: {\r\n      NORMAL: [160, 180], // Kollar yukarıda, doğru pozisyon\r\n      TRANS: [100, 160],  // Geçiş pozisyonu\r\n      PASS: [70, 100]     // Kollar aşağıdayken\r\n  },\r\n  ANGLE_ELBOW_WRIST: {\r\n      NORMAL: [170, 180], // Kollar düz\r\n      TRANS: [120, 170],  // Geçiş pozisyonu\r\n  },\r\n  OFFSET_THRESH: 20.0,    // Simetri hatalarını kontrol için\r\n  INACTIVE_THRESH: 10.0,  // Hareketsizlik toleransı\r\n  CNT_FRAME_THRESH: 50    // Geri bildirim gösterim süresi\r\n};\r\n\r\n\r\n/* TRICEPS EXTENSION */\r\n\r\nexport const thresholdsTricepsExtensionBeginner = {\r\n  ANGLE_ELBOW: {\r\n    NORMAL: [0, 5], // Dirsek tam uzatılmış pozisyon\r\n    TRANS: [6, 15],  // Geçiş pozisyonu\r\n    PASS: [16, 25],  // Dirsek başlangıç pozisyonu (90 derece)\r\n  },\r\n  OFFSET_THRESH: 20.0,\r\n  INACTIVE_THRESH: 10.0, // İnaktiflik süresi\r\n  CNT_FRAME_THRESH: 50, // Geri bildirim için gereken kare sayısı   // Geri bildirim için minimum kare sayısı\r\n};\r\n\r\nexport const thresholdsTricepsExtensionPro = {\r\n  ANGLE_ELBOW: {\r\n    NORMAL: [25, 30], // Dirsek tam uzatılmış pozisyon\r\n    TRANS: [31, 89],  // Geçiş pozisyonu\r\n    PASS: [90, 120],  // Dirsek başlangıç pozisyonu (90 derece)\r\n  },\r\n  OFFSET_THRESH: 20.0,\r\n  INACTIVE_THRESH: 10.0, // İnaktiflik süresi\r\n  CNT_FRAME_THRESH: 50, // Geri bildirim için gereken kare sayısı   // Geri bildirim için minimum kare sayısı\r\n};\r\n\r\n\r\n\r\n/* LATERAL RAISE */\r\n\r\nexport const thresholdsLateralRaiseBeginner = {\r\n  ANGLE_SHOULDER: {\r\n    NORMAL: [0, 15], // Kol başlama pozisyonu (kollar vücuda paralel)\r\n    TRANS: [16, 45], // Geçiş pozisyonu (kol yukarıya doğru hareket eder)\r\n    PASS: [46, 90],  // Kol tam açılma pozisyonu (90 derece)\r\n  },\r\n  OFFSET_THRESH: 20.0,\r\n  INACTIVE_THRESH: 10.0, // İnaktiflik süresi\r\n  CNT_FRAME_THRESH: 50, // Geri bildirim için gereken kare sayısı\r\n};\r\n\r\nexport const thresholdsLateralRaisePro = {\r\n  ANGLE_SHOULDER: {\r\n    NORMAL: [0, 10], // Kol başlama pozisyonu (kollar vücuda paralel)\r\n    TRANS: [11, 45], // Geçiş pozisyonu (kol yukarıya doğru hareket eder)\r\n    PASS: [46, 90],  // Kol tam açılma pozisyonu (90 derece)\r\n  },\r\n  OFFSET_THRESH: 20.0,\r\n  INACTIVE_THRESH: 10.0, // İnaktiflik süresi\r\n  CNT_FRAME_THRESH: 50, // Geri bildirim için gereken kare sayısı\r\n};\r\n","import React, { useRef, useEffect, useCallback, useState } from 'react';\r\nimport Webcam from \"react-webcam\";\r\nimport { Pose } from '@mediapipe/pose';\r\nimport * as cam from '@mediapipe/camera_utils';\r\nimport { thresholdsBicepsCurl } from './utils/thresholds';\r\nimport {colors,findAngle} from \"./utils/helperUtils\";\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { sendResults } from \"../../api\";\r\nimport { toast } from \"react-toastify\"; \r\nimport \"react-toastify/dist/ReactToastify.css\"; \r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction BicepsCurlExercise() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const poseRef = useRef(null);\r\n\r\n  const { user } = useAuth(); // Aktif kullanıcı bilgisi\r\n\r\n  const [isBeginnerMode, setIsBeginnerMode] = useState(true);\r\n  const [correctCount, setCorrectCount] = useState(0);\r\n  const [incorrectCount, setIncorrectCount] = useState(0);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [currentThresholds, setCurrentThresholds] = useState(thresholdsBicepsCurl);\r\n\r\n  const stateTrackerRef = useRef({\r\n    state_seq_left: [],\r\n    state_seq_right: [],\r\n    CURL_COUNT: 0,\r\n    IMPROPER_CURL: 0,\r\n    DISPLAY_TEXT: { left: null, right: null },\r\n    has_completed_tour_left: false,\r\n    has_completed_tour_right: false,\r\n    has_started_left: false, // Hareketin başladığını izlemek için\r\n    has_started_right: false,\r\n    last_curl_left: null, // Son tam tur\r\n    last_curl_right: null  // Son tam tur\r\n  });\r\n\r\n\r\n  const FEEDBACK_MESSAGES = {\r\n    straighten: 'STRAIGHTEN YOUR ARM',\r\n    bend_more: 'BEND YOUR ARM MORE',\r\n    complete_curl: 'COMPLETE THE CURL'\r\n  };\r\n\r\n  const handleModeChange = (event) => {\r\n    const isBeginner = event.target.value === \"beginner\";\r\n    setIsBeginnerMode(isBeginner);\r\n    const newThresholds = isBeginner ? thresholdsBicepsCurl : thresholdsBicepsCurl;\r\n    setCurrentThresholds(newThresholds);\r\n    console.log(\"Current Thresholds:\", newThresholds);\r\n  };\r\n\r\n  const sendResultsToBackend = async () => {\r\n    const userId = user?.id; // Aktif kullanıcı ID'sini alın\r\n    const exerciseId = 1; // Biceps Curl'ün veritabanındaki ID'si\r\n    const createdDate = new Date().toISOString(); // Oluşturulma tarihi\r\n\r\n    try {\r\n      const response = await sendResults({\r\n        userId,\r\n        exerciseId,\r\n        correct: correctCount,\r\n        incorrect: incorrectCount,\r\n        createdDate,\r\n      });\r\n      toast.success(`Kayıt işlemi başarıyla tamamlandı! ${response}`);\r\n    } catch (error) {\r\n      toast.error(`Sonuçlar gönderilirken bir hata oluştu: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const resetExercise = () => {\r\n    if (correctCount !== 0 || incorrectCount !== 0) {\r\n      sendResultsToBackend();\r\n    }\r\n\r\n    setCorrectCount(0);\r\n    setIncorrectCount(0);\r\n    stateTrackerRef.current.BICEPS_CURL_COUNT = 0;\r\n    stateTrackerRef.current.INCORRECT_CURL = 0;\r\n    // Reset other state variables if needed\r\n\r\n    // Close the pose instance and stop the camera\r\n    if (poseRef.current) {\r\n      poseRef.current.close();\r\n      poseRef.current = null;\r\n    }\r\n    if (cameraRef.current) {\r\n      cameraRef.current.stop();\r\n      cameraRef.current = null;\r\n    }\r\n    if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\r\n      const tracks = webcamRef.current.video.srcObject.getTracks();\r\n      tracks.forEach((track) => track.stop());\r\n      webcamRef.current.video.srcObject = null;\r\n    }\r\n    setIsCameraActive(false);\r\n\r\n    // Clear the canvas\r\n    if (canvasRef.current) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.fillStyle = \"black\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n    navigate('/profile');\r\n  };\r\n\r\n  const startExercise = () => {\r\n    setIsCameraActive(true);\r\n    startCamera();\r\n  };\r\n\r\n  const startCamera = () => {\r\n    if (webcamRef.current && webcamRef.current.video) {\r\n      cameraRef.current = new cam.Camera(webcamRef.current.video, {\r\n        onFrame: async () => {\r\n          if (webcamRef.current && webcamRef.current.video && poseRef.current) {\r\n            await poseRef.current.send({ image: webcamRef.current.video });\r\n          }\r\n        },\r\n        width: 640,\r\n        height: 480,\r\n      });\r\n      cameraRef.current.start();\r\n    }\r\n  };\r\n\r\n  const getState = (elbowAngle) => {\r\n    if (elbowAngle >= currentThresholds.ANGLE_ELBOW.NORMAL[0] && elbowAngle <= currentThresholds.ANGLE_ELBOW.NORMAL[1]) {\r\n      return 's1'; // Başlangıç pozisyonu\r\n    } else if (elbowAngle >= currentThresholds.ANGLE_ELBOW.TRANS[0] && elbowAngle <= currentThresholds.ANGLE_ELBOW.TRANS[1]) {\r\n      return 's2'; // Geçiş pozisyonu\r\n    } else if (elbowAngle >= currentThresholds.ANGLE_ELBOW.PASS[0] && elbowAngle <= currentThresholds.ANGLE_ELBOW.PASS[1]) {\r\n      return 's3'; // Tam bükülmüş pozisyon\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const updateStateSequence = (newState, side) => {\r\n    const stateTracker = stateTrackerRef.current;\r\n    const stateSeq = side === 'left' ? stateTracker.state_seq_left : stateTracker.state_seq_right;\r\n    let updatedStateSeq = [...stateSeq];\r\n\r\n    // Geri bildirim mesajını sıfırla\r\n    stateTracker.DISPLAY_TEXT[side] = null;\r\n\r\n    if (newState === 's1') {\r\n      if (updatedStateSeq.includes('s3')) {\r\n        // Her iki kol da tam tur tamamladıysa doğru sayımı artır\r\n        if (stateTracker.has_completed_tour_left && stateTracker.has_completed_tour_right) {\r\n          stateTracker.CURL_COUNT += 1;\r\n          setCorrectCount(stateTrackerRef.current.CURL_COUNT);\r\n          stateTracker.has_completed_tour_left = false;\r\n          stateTracker.has_completed_tour_right = false;\r\n          stateTracker.last_curl_left = Date.now();\r\n          stateTracker.last_curl_right = Date.now();\r\n        }\r\n      } else if (stateTracker.has_started_left || stateTracker.has_started_right) {\r\n        // Hareket başlamıştı ama tam tur yapılmadıysa, yanlış sayımı artır\r\n        if (side === 'left' && stateTracker.last_curl_left && Date.now() - stateTracker.last_curl_left > 2000) {\r\n          stateTracker.IMPROPER_CURL += 1;\r\n          setIncorrectCount(stateTrackerRef.current.IMPROPER_CURL);\r\n        }\r\n        if (side === 'right' && stateTracker.last_curl_right && Date.now() - stateTracker.last_curl_right > 2000) {\r\n          stateTracker.IMPROPER_CURL += 1;\r\n          setIncorrectCount(stateTrackerRef.current.IMPROPER_CURL);\r\n        }\r\n      }\r\n      // Sıfırla ve yeniden başlat\r\n      updatedStateSeq = [];\r\n      stateTracker.has_started_left = false;\r\n      stateTracker.has_started_right = false;\r\n    } else if (newState === 's2' && updatedStateSeq.length === 0) {\r\n      // Geçiş pozisyonu, hareket başlatıldı\r\n      updatedStateSeq.push(newState);\r\n      if (side === 'left') stateTracker.has_started_left = true;\r\n      if (side === 'right') stateTracker.has_started_right = true;\r\n    } else if (newState === 's3' && updatedStateSeq.includes('s2')) {\r\n      // Tam bükülmüş pozisyona geçildi\r\n      updatedStateSeq.push(newState);\r\n      if (side === 'left') stateTracker.has_completed_tour_left = true;\r\n      if (side === 'right') stateTracker.has_completed_tour_right = true;\r\n    }\r\n\r\n    // Geri bildirim mesajları\r\n    if (newState === 's1') {\r\n      stateTracker.DISPLAY_TEXT[side] = FEEDBACK_MESSAGES.straighten;\r\n    } else if (newState === 's2') {\r\n      stateTracker.DISPLAY_TEXT[side] = FEEDBACK_MESSAGES.bend_more;\r\n    } else if (newState === 's3') {\r\n      stateTracker.DISPLAY_TEXT[side] = FEEDBACK_MESSAGES.complete_curl;\r\n    }\r\n\r\n    if (side === 'left') {\r\n      stateTracker.state_seq_left = updatedStateSeq;\r\n    } else {\r\n      stateTracker.state_seq_right = updatedStateSeq;\r\n    }\r\n  };\r\n\r\n  const onResults = useCallback((results) => {\r\n    if (webcamRef.current && canvasRef.current) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      canvas.width = webcamRef.current.video.videoWidth;\r\n      canvas.height = webcamRef.current.video.videoHeight;\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(webcamRef.current.video, 0, 0, canvas.width, canvas.height);\r\n\r\n      if (results.poseLandmarks) {\r\n        const leftElbow = results.poseLandmarks[13];\r\n        const leftShoulder = results.poseLandmarks[11];\r\n        const leftWrist = results.poseLandmarks[15];\r\n        const rightElbow = results.poseLandmarks[14];\r\n        const rightShoulder = results.poseLandmarks[12];\r\n        const rightWrist = results.poseLandmarks[16];\r\n\r\n        const leftElbowAngle = findAngle(leftShoulder, leftElbow, leftWrist);\r\n        const rightElbowAngle = findAngle(rightShoulder, rightElbow, rightWrist);\r\n\r\n        const leftState = getState(leftElbowAngle);\r\n        const rightState = getState(rightElbowAngle);\r\n        updateStateSequence(leftState, 'left');\r\n        updateStateSequence(rightState, 'right');\r\n\r\n        const drawLandmark = (x, y, color) => {\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, 5, 0, 2 * Math.PI);\r\n          ctx.fillStyle = color;\r\n          ctx.fill();\r\n        };\r\n\r\n        const drawConnector = (p1, p2, color) => {\r\n          ctx.beginPath();\r\n          ctx.moveTo(p1.x, p1.y);\r\n          ctx.lineTo(p2.x, p2.y);\r\n          ctx.strokeStyle = color;\r\n          ctx.lineWidth = 4;\r\n          ctx.stroke();\r\n        };\r\n\r\n        drawLandmark(leftShoulder.x * canvas.width, leftShoulder.y * canvas.height, colors.green);\r\n        drawLandmark(leftElbow.x * canvas.width, leftElbow.y * canvas.height, colors.green);\r\n        drawLandmark(leftWrist.x * canvas.width, leftWrist.y * canvas.height, colors.green);\r\n        drawConnector(\r\n          { x: leftShoulder.x * canvas.width, y: leftShoulder.y * canvas.height },\r\n          { x: leftElbow.x * canvas.width, y: leftElbow.y * canvas.height },\r\n          colors.blue\r\n        );\r\n        drawConnector(\r\n          { x: leftElbow.x * canvas.width, y: leftElbow.y * canvas.height },\r\n          { x: leftWrist.x * canvas.width, y: leftWrist.y * canvas.height },\r\n          colors.blue\r\n        );\r\n\r\n        drawLandmark(rightShoulder.x * canvas.width, rightShoulder.y * canvas.height, colors.green);\r\n        drawLandmark(rightElbow.x * canvas.width, rightElbow.y * canvas.height, colors.green);\r\n        drawLandmark(rightWrist.x * canvas.width, rightWrist.y * canvas.height, colors.green);\r\n        drawConnector(\r\n          { x: rightShoulder.x * canvas.width, y: rightShoulder.y * canvas.height },\r\n          { x: rightElbow.x * canvas.width, y: rightElbow.y * canvas.height },\r\n          colors.blue\r\n        );\r\n        drawConnector(\r\n          { x: rightElbow.x * canvas.width, y: rightElbow.y * canvas.height },\r\n          { x: rightWrist.x * canvas.width, y: rightWrist.y * canvas.height },\r\n          colors.blue\r\n        );\r\n\r\n        ctx.fillStyle = colors.white;\r\n        ctx.font = '16px Arial';\r\n        ctx.fillText(`Left Elbow Angle: ${leftElbowAngle.toFixed(2)}`, 30, 30);\r\n        ctx.fillText(`Right Elbow Angle: ${rightElbowAngle.toFixed(2)}`, 30, 60);\r\n\r\n        // Doğru ve yanlış sayıları yazdır\r\n        ctx.fillText(`Correct Curls: ${stateTrackerRef.current.CURL_COUNT}`, 30, canvas.height - 60);\r\n        ctx.fillText(`Incorrect Curls: ${stateTrackerRef.current.IMPROPER_CURL}`, 30, canvas.height - 30);\r\n\r\n        // Geri bildirim mesajlarını göster\r\n        if (stateTrackerRef.current.DISPLAY_TEXT.left) {\r\n          ctx.fillText(stateTrackerRef.current.DISPLAY_TEXT.left, 30, canvas.height - 90);\r\n        }\r\n        if (stateTrackerRef.current.DISPLAY_TEXT.right) {\r\n          ctx.fillText(stateTrackerRef.current.DISPLAY_TEXT.right, 30, canvas.height - 120);\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const pose = new Pose({\r\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\r\n    });\r\n\r\n    pose.setOptions({\r\n      modelComplexity: 1,\r\n      smoothLandmarks: true,\r\n      enableSegmentation: false,\r\n      smoothSegmentation: false,\r\n      minDetectionConfidence: 0.5,\r\n      minTrackingConfidence: 0.5,\r\n    });\r\n\r\n    poseRef.current = pose;\r\n\r\n    pose.onResults(onResults);\r\n\r\n    return () => {\r\n      if (poseRef.current) {\r\n        poseRef.current.close();\r\n        poseRef.current = null;\r\n      }\r\n      if (cameraRef.current) {\r\n        cameraRef.current.stop();\r\n        cameraRef.current = null;\r\n      }\r\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n        webcamRef.current.video.srcObject = null;\r\n      }\r\n    };\r\n  }, [onResults]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-sm-12 text-center mb-3\">\r\n              <p>Video Alanı</p>\r\n            </div>\r\n            <div className=\"col-md-6 col-sm-12 text-center mb-3\">\r\n              <p>Bilgilendirme Alanı</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-sm-12 mb-3\">\r\n              <Webcam ref={webcamRef} style={{ display: \"none\" }} />\r\n              <canvas\r\n                ref={canvasRef}\r\n                className=\"h-full w-full object-contain\"\r\n                style={{\r\n                  maxWidth: \"100%\",\r\n                  maxHeight: \"100%\",\r\n                  position: \"relative\",\r\n                  left: 0,\r\n                  top: 0,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-6 col-sm-12\">\r\n              <select\r\n                className=\"form-select\"\r\n                aria-label=\"Default select example\"\r\n                onChange={handleModeChange}\r\n                value={isBeginnerMode ? \"beginner\" : \"pro\"}\r\n              >\r\n                <option className=\"dropdown-item\" value=\"beginner\">\r\n                  Beginner Mode\r\n                </option>\r\n                <option className=\"dropdown-item\" value=\"pro\">\r\n                  Pro Mode\r\n                </option>\r\n              </select>\r\n              <table className=\"table mt-3\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Metric</th>\r\n                    <th scope=\"col\">Value</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Correct</td>\r\n                    <td>{correctCount}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Incorrect</td>\r\n                    <td>{incorrectCount}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <button className=\"btn btn-success mt-3\" onClick={startExercise}>Start Sport</button>\r\n              <button className=\"btn btn-danger mt-3 ms-2\" onClick={resetExercise}>Finish Sport</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BicepsCurlExercise;\r\n"],"names":["getLandmarkPosition","landmark","frameWidth","frameHeight","x","y","getLandmarkFeatures","poseLandmarks","feature","dictFeatures","nose","left","shoulder","elbow","wrist","hip","knee","ankle","foot","right","featureSet","Error","magnitude","v","Math","sqrt","findAngle","p1","p2","refPt","arguments","length","undefined","p1Ref","p2Ref","cosTheta","v1","v2","dot","theta","acos","max","min","round","PI","drawText","ctx","msg","options","boxWidth","textColor","backgroundColor","fontSize","fontFamily","paddingX","paddingY","font","textWidth","measureText","width","textHeight","parseInt","drawRoundedRect","height","radius","fillColor","fillStyle","beginPath","moveTo","arcTo","closePath","fill","fillText","drawCircle","position","color","arc","drawConnector","start","end","lineWidth","lineTo","strokeStyle","stroke","drawDottedLine","lineLength","numOfDots","floor","i","dotX","dotY","colors","blue","red","green","light_green","yellow","magenta","white","cyan","light_blue","thresholdsBicepsCurl","ANGLE_ELBOW","NORMAL","TRANS","PASS","ELBOW_THRESH","INACTIVE_THRESH","CNT_FRAME_THRESH","thresholdsSquatBeginner","ANGLE_HIP_KNEE_VERT","HIP_THRESH","ANKLE_THRESH","KNEE_THRESH","OFFSET_THRESH","thresholdsSquatPro","thresholdsCrunchBeginner","ANGLE_SHOULDER_HIP_VERT","NECK_THRESH","thresholdsCrunchPro","thresholdsTricepsExtensionBeginner","thresholdsTricepsExtensionPro","thresholdsLateralRaiseBeginner","ANGLE_SHOULDER","thresholdsLateralRaisePro","webcamRef","useRef","canvasRef","cameraRef","poseRef","user","useAuth","isBeginnerMode","setIsBeginnerMode","useState","correctCount","setCorrectCount","incorrectCount","setIncorrectCount","isCameraActive","setIsCameraActive","navigate","useNavigate","currentThresholds","setCurrentThresholds","stateTrackerRef","state_seq_left","state_seq_right","CURL_COUNT","IMPROPER_CURL","DISPLAY_TEXT","has_completed_tour_left","has_completed_tour_right","has_started_left","has_started_right","last_curl_left","last_curl_right","FEEDBACK_MESSAGES","startCamera","current","video","cam","onFrame","async","send","image","getState","elbowAngle","updateStateSequence","newState","side","stateTracker","updatedStateSeq","includes","Date","now","push","onResults","useCallback","results","canvas","getContext","videoWidth","videoHeight","clearRect","drawImage","leftElbow","leftShoulder","leftWrist","rightElbow","rightShoulder","rightWrist","leftElbowAngle","rightElbowAngle","leftState","rightState","drawLandmark","toFixed","useEffect","pose","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","minDetectionConfidence","minTrackingConfidence","close","stop","srcObject","getTracks","forEach","track","_jsx","_Fragment","children","className","_jsxs","Webcam","ref","style","display","maxWidth","maxHeight","top","onChange","event","isBeginner","target","value","newThresholds","console","log","scope","onClick","startExercise","resetExercise","userId","id","createdDate","toISOString","response","sendResults","exerciseId","correct","incorrect","toast","success","error","message","sendResultsToBackend","BICEPS_CURL_COUNT","INCORRECT_CURL","fillRect"],"sourceRoot":""}