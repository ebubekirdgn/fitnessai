{"version":3,"file":"static/js/646.a777fb55.chunk.js","mappings":"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","sources":["components/Exercises/utils/helperUtils.js","components/Exercises/ShoulderPress.jsx"],"sourcesContent":["// General utility functions\r\n\r\nexport const getLandmarkPosition = (landmark, frameWidth, frameHeight) => ({\r\n  x: landmark.x * frameWidth,\r\n  y: landmark.y * frameHeight,\r\n});\r\n\r\nexport const getLandmarkFeatures = (poseLandmarks,feature,frameWidth,frameHeight) => {\r\n  const dictFeatures = {\r\n    nose: 0,\r\n    left: {\r\n      shoulder: 11,\r\n      elbow: 13,\r\n      wrist: 15,\r\n      hip: 23,\r\n      knee: 25,\r\n      ankle: 27,\r\n      foot: 31,\r\n    },\r\n    right: {\r\n      shoulder: 12,\r\n      elbow: 14,\r\n      wrist: 16,\r\n      hip: 24,\r\n      knee: 26,\r\n      ankle: 28,\r\n      foot: 32,\r\n    },\r\n  };\r\n\r\n  if (feature === \"nose\") {\r\n    return getLandmarkPosition(\r\n      poseLandmarks[dictFeatures.nose],\r\n      frameWidth,\r\n      frameHeight\r\n    );\r\n  } else if (feature === \"left\" || feature === \"right\") {\r\n    const featureSet = dictFeatures[feature];\r\n    return {\r\n      shoulder: getLandmarkPosition(\r\n        poseLandmarks[featureSet.shoulder],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      elbow: getLandmarkPosition(\r\n        poseLandmarks[featureSet.elbow],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      wrist: getLandmarkPosition(\r\n        poseLandmarks[featureSet.wrist],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      hip: getLandmarkPosition(\r\n        poseLandmarks[featureSet.hip],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      knee: getLandmarkPosition(\r\n        poseLandmarks[featureSet.knee],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      ankle: getLandmarkPosition(\r\n        poseLandmarks[featureSet.ankle],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n      foot: getLandmarkPosition(\r\n        poseLandmarks[featureSet.foot],\r\n        frameWidth,\r\n        frameHeight\r\n      ),\r\n    };\r\n  } else {\r\n    throw new Error(\"Feature must be 'nose', 'left', or 'right'.\");\r\n  }\r\n};\r\n\r\nexport const dot = (v1, v2) => v1.x * v2.x + v1.y * v2.y;\r\n\r\nexport const magnitude = (v) => Math.sqrt(v.x * v.x + v.y * v.y);\r\n\r\nexport const findAngle = (p1, p2, refPt = { x: 0, y: 0 }) => {\r\n  const p1Ref = { x: p1.x - refPt.x, y: p1.y - refPt.y };\r\n  const p2Ref = { x: p2.x - refPt.x, y: p2.y - refPt.y };\r\n\r\n  const cosTheta = dot(p1Ref, p2Ref) / (magnitude(p1Ref) * magnitude(p2Ref));\r\n  const theta = Math.acos(Math.max(Math.min(cosTheta, 1.0), -1.0));\r\n  return Math.round(theta * (180 / Math.PI));\r\n};\r\n\r\nexport const drawRoundedRect = (\r\n  ctx,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  fillColor\r\n) => {\r\n  ctx.fillStyle = fillColor;\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + radius, y);\r\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\r\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\r\n  ctx.arcTo(x, y + height, x, y, radius);\r\n  ctx.arcTo(x, y, x + width, y, radius);\r\n  ctx.closePath();\r\n  ctx.fill();\r\n};\r\n\r\nexport const drawText = (ctx, msg, x, y, options = {}) => {\r\n  const {\r\n    boxWidth = 8,\r\n    textColor = \"rgb(0, 255, 0)\",\r\n    backgroundColor = \"rgb(0, 0, 0)\",\r\n    fontSize = \"16px\",\r\n    fontFamily = \"Arial\",\r\n    paddingX = 20,\r\n    paddingY = 10,\r\n  } = options;\r\n\r\n  ctx.font = `${fontSize} ${fontFamily}`;\r\n  const textMetrics = ctx.measureText(msg);\r\n  const textWidth = textMetrics.width;\r\n  const textHeight = parseInt(fontSize, 10);\r\n\r\n  const rectStartX = x - paddingX;\r\n  const rectStartY = y - textHeight - paddingY;\r\n  const rectWidth = textWidth + 2 * paddingX;\r\n  const rectHeight = textHeight + 2 * paddingY;\r\n\r\n  drawRoundedRect(\r\n    ctx,\r\n    rectStartX,\r\n    rectStartY,\r\n    rectWidth,\r\n    rectHeight,\r\n    boxWidth,\r\n    backgroundColor\r\n  );\r\n  ctx.fillStyle = textColor;\r\n  ctx.fillText(msg, x, y + paddingY / 2);\r\n};\r\n\r\nexport const drawCircle = (ctx, position, radius, color) => {\r\n  ctx.beginPath();\r\n  ctx.arc(position.x, position.y, radius, 0, 2 * Math.PI);\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n};\r\n\r\nexport const drawConnector = (ctx, start, end, color, lineWidth) => {\r\n  ctx.beginPath();\r\n  ctx.moveTo(start.x, start.y);\r\n  ctx.lineTo(end.x, end.y);\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.stroke();\r\n};\r\n\r\nexport const drawDottedLine = (ctx, start, end, color) => {\r\n  const lineLength = Math.sqrt((end.x - start.x) ** 2 + (end.y - start.y) ** 2);\r\n  const dotSpacing = 5;\r\n  const numOfDots = Math.floor(lineLength / dotSpacing);\r\n\r\n  for (let i = 0; i < numOfDots; i++) {\r\n    const dotX = start.x + ((end.x - start.x) / numOfDots) * i;\r\n    const dotY = start.y + ((end.y - start.y) / numOfDots) * i;\r\n    ctx.beginPath();\r\n    ctx.arc(dotX, dotY, 1, 0, 2 * Math.PI);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n  }\r\n};\r\n\r\nexport const colors = {\r\n  blue: 'rgb(0,127,255)',\r\n  red: 'rgb(255,50,50)',\r\n  green: 'rgb(0,255,127)',\r\n  light_green: 'rgb(100,233,127)',\r\n  yellow: 'rgb(255,255,0)',\r\n  magenta: 'rgb(255,0,255)',\r\n  white: 'rgb(255,255,255)',\r\n  cyan: 'rgb(0,255,255)',\r\n  light_blue: 'rgb(102,204,255)'\r\n};","import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport Webcam from \"react-webcam\";\r\nimport { Pose } from '@mediapipe/pose';\r\nimport * as cam from '@mediapipe/camera_utils';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { sendResults } from \"../../api\";\r\nimport { toast } from \"react-toastify\"; // toast'ı ekleyin\r\nimport \"react-toastify/dist/ReactToastify.css\"; // toast css'i ekleyin\r\nimport {findAngle} from \"./utils/helperUtils\";\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction ShoulderPressExercise() {\r\n\r\n //webcam and canvas references\r\n   const webcamRef = useRef(null);\r\n   const canvasRef = useRef(null);\r\n   const cameraRef = useRef(null);\r\n   const poseRef = useRef(null);\r\n\r\n   const { user } = useAuth();\r\n   const navigate = useNavigate();\r\n\r\n  // State for counting correct and incorrect raises\r\n  const [correctRaiseCount, setCorrectRaiseCount] = useState(0);\r\n  const [incorrectRaiseCount, setIncorrectRaiseCount] = useState(0);\r\n  const [feedback, setFeedback] = useState(\"\"); // State for feedback messages\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n\r\n  // Ref to track the current arm lift status\r\n  const isArmLiftedRef = useRef(false);\r\n\r\n  // Threshold values for angle detection\r\n  const thresholds = {\r\n    SHOULDER_RAISE: [85, 95], // Ideal shoulder raise angle range\r\n    SHOULDER_TOO_LOW: 70, // Minimum angle for a correct raise\r\n    SHOULDER_TOO_HIGH: 100, // Maximum angle for a correct raise\r\n  };\r\n\r\n   const sendResultsToBackend = async () => {\r\n      const userId = user?.id; // Aktif kullanıcı ID'sini alın\r\n      const exerciseId = 4; // Shoulder Press veritabanındaki ID'si\r\n      const createdDate = new Date().toISOString(); // Oluşturulma tarihi\r\n  \r\n      try {\r\n        const response = await sendResults({\r\n          userId,\r\n          exerciseId,\r\n          correct: correctRaiseCount,\r\n          incorrect: incorrectRaiseCount,\r\n          createdDate,\r\n        });\r\n        toast.success(`Kayıt işlemi başarıyla tamamlandı! ${response}`);\r\n      } catch (error) {\r\n        toast.error(`Sonuçlar gönderilirken bir hata oluştu: ${error.message}`);\r\n      }\r\n    };\r\n\r\n    const resetExercise = () => {\r\n      if (correctRaiseCount !== 0 || incorrectRaiseCount !== 0) {\r\n        sendResultsToBackend();\r\n      }\r\n  \r\n      setCorrectRaiseCount(0);\r\n      setIncorrectRaiseCount(0);\r\n      // Close the pose instance and stop the camera\r\n      if (poseRef.current) {\r\n        poseRef.current.close();\r\n        poseRef.current = null;\r\n      }\r\n      if (cameraRef.current) {\r\n        cameraRef.current.stop();\r\n        cameraRef.current = null;\r\n      }\r\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n        webcamRef.current.video.srcObject = null;\r\n      }\r\n      setIsCameraActive(false);\r\n  \r\n      // Clear the canvas\r\n      if (canvasRef.current) {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      }\r\n      navigate('/profile');\r\n    };\r\n\r\n    const startExercise = () => {\r\n      setIsCameraActive(true);\r\n      startCamera();\r\n    };\r\n\r\n    const startCamera = () => {\r\n        if (webcamRef.current && webcamRef.current.video) {\r\n          cameraRef.current = new cam.Camera(webcamRef.current.video, {\r\n            onFrame: async () => {\r\n              if (webcamRef.current && webcamRef.current.video && poseRef.current) {\r\n                await poseRef.current.send({ image: webcamRef.current.video });\r\n              }\r\n            },\r\n            width: 640,\r\n            height: 480,\r\n          });\r\n          cameraRef.current.start();\r\n        }\r\n      };\r\n  // Pose detection and feedback function\r\n  const onResults = useCallback((results) => {\r\n    if (webcamRef.current && canvasRef.current) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      \r\n      canvas.width = webcamRef.current.video.videoWidth;\r\n      canvas.height = webcamRef.current.video.videoHeight;\r\n\r\n      // Draw the webcam image on the canvas\r\n      ctx.drawImage(webcamRef.current.video, 0, 0, canvas.width, canvas.height);\r\n\r\n      if (results.poseLandmarks) {\r\n        const landmarks = results.poseLandmarks;\r\n\r\n        // Function to draw a circle at a landmark point\r\n        const drawLandmark = (x, y, color) => {\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, 5, 0, 2 * Math.PI);\r\n          ctx.fillStyle = color;\r\n          ctx.fill();\r\n        };\r\n\r\n        // Function to draw text at a landmark point\r\n        const drawText = (x, y, text) => {\r\n          ctx.fillStyle = \"white\";\r\n          ctx.font = \"16px Arial\";\r\n          ctx.fillText(text, x, y);\r\n        };\r\n\r\n        // Draw landmarks and calculate angles for both arms\r\n        const leftShoulder = { x: landmarks[11].x * canvas.width, y: landmarks[11].y * canvas.height };\r\n        const leftElbow = { x: landmarks[13].x * canvas.width, y: landmarks[13].y * canvas.height };\r\n        const rightShoulder = { x: landmarks[12].x * canvas.width, y: landmarks[12].y * canvas.height };\r\n        const rightElbow = { x: landmarks[14].x * canvas.width, y: landmarks[14].y * canvas.height };\r\n\r\n        // Draw landmarks for left and right arms\r\n        drawLandmark(leftShoulder.x, leftShoulder.y, \"yellow\");\r\n        drawLandmark(leftElbow.x, leftElbow.y, \"red\");\r\n        drawLandmark(rightShoulder.x, rightShoulder.y, \"yellow\");\r\n        drawLandmark(rightElbow.x, rightElbow.y, \"red\");\r\n\r\n        // Function to calculate angle between three points\r\n        \r\n\r\n        // Calculate angles for both arms\r\n        const leftShoulderAngle = findAngle({ x: leftShoulder.x, y: 1 }, leftShoulder, leftElbow);\r\n        const rightShoulderAngle = findAngle({ x: rightShoulder.x, y: 1 }, rightShoulder, rightElbow);\r\n\r\n        // Draw the angles as text on the canvas near the elbows\r\n        drawText(leftElbow.x + 10, leftElbow.y, `${Math.round(leftShoulderAngle)}°`);\r\n        drawText(rightElbow.x + 10, rightElbow.y, `${Math.round(rightShoulderAngle)}°`);\r\n\r\n        let correctLift = false;\r\n\r\n        // Check if both arms are in the correct angle range\r\n        if (\r\n          leftShoulderAngle >= thresholds.SHOULDER_RAISE[0] &&\r\n          leftShoulderAngle <= thresholds.SHOULDER_RAISE[1] &&\r\n          rightShoulderAngle >= thresholds.SHOULDER_RAISE[0] &&\r\n          rightShoulderAngle <= thresholds.SHOULDER_RAISE[1]\r\n        ) {\r\n          correctLift = true;\r\n          setFeedback(\"Harika! Kollarını doğru şekilde kaldırdın.\");\r\n        } else {\r\n          setFeedback(\"Kollarını doğru pozisyonda tutmaya çalış.\");\r\n        }\r\n\r\n        // Detect when the arms are lifted and then lowered\r\n        if (correctLift && !isArmLiftedRef.current) {\r\n          // Arms were just lifted\r\n          isArmLiftedRef.current = true;\r\n        } else if (!correctLift && isArmLiftedRef.current) {\r\n          // Arms were lowered, count the lift\r\n          if (\r\n            (leftShoulderAngle < thresholds.SHOULDER_TOO_LOW) ||\r\n            (rightShoulderAngle < thresholds.SHOULDER_TOO_LOW) ||\r\n            (leftShoulderAngle > thresholds.SHOULDER_TOO_HIGH) ||\r\n            (rightShoulderAngle > thresholds.SHOULDER_TOO_HIGH)\r\n          ) {\r\n            setIncorrectRaiseCount(prevCount => prevCount + 1);\r\n          } else {\r\n            setCorrectRaiseCount(prevCount => prevCount + 1);\r\n          }\r\n          isArmLiftedRef.current = false;\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n        const pose = new Pose({\r\n        locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\r\n      });\r\n  \r\n      pose.setOptions({\r\n        modelComplexity: 1,\r\n        smoothLandmarks: true,\r\n        enableSegmentation: false,\r\n        smoothSegmentation: false,\r\n        minDetectionConfidence: 0.5,\r\n        minTrackingConfidence: 0.5,\r\n      });\r\n  \r\n      poseRef.current = pose;\r\n  \r\n      pose.onResults(onResults);\r\n  \r\n      return () => {\r\n        if (poseRef.current) {\r\n          poseRef.current.close();\r\n          poseRef.current = null;\r\n        }\r\n        if (cameraRef.current) {\r\n          cameraRef.current.stop();\r\n          cameraRef.current = null;\r\n        }\r\n        if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\r\n          const tracks = webcamRef.current.video.srcObject.getTracks();\r\n          tracks.forEach((track) => track.stop());\r\n          webcamRef.current.video.srcObject = null;\r\n        }\r\n      };\r\n    }, [onResults]);\r\n\r\n  return (\r\n      <>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-sm-12 text-center mb-3\">\r\n                <p>Video Alanı</p>\r\n              </div>\r\n              <div className=\"col-md-6 col-sm-12 text-center mb-3\">\r\n                <p>Bilgilendirme Alanı</p>\r\n              </div>\r\n            </div>\r\n  \r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-sm-12 mb-3\">\r\n                <Webcam ref={webcamRef} style={{ display: \"none\" }} />\r\n                <canvas\r\n                  ref={canvasRef}\r\n                  className=\"h-full w-full object-contain\"\r\n                  style={{\r\n                    maxWidth: \"100%\",\r\n                    maxHeight: \"100%\",\r\n                    position: \"relative\",\r\n                    left: 0,\r\n                    top: 0,\r\n                  }}\r\n                />\r\n              </div>\r\n  \r\n              <div className=\"col-md-6 col-sm-12\">\r\n                <table className=\"table mt-3\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Metric</th>\r\n                      <th scope=\"col\">Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Correct</td>\r\n                      <td>{correctRaiseCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Incorrect</td>\r\n                      <td>{incorrectRaiseCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Feedback</td>\r\n                      <td>{feedback}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <button className=\"btn btn-success mt-3\" onClick={startExercise}>Start Sport</button>\r\n                <button className=\"btn btn-danger mt-3 ms-2\" onClick={resetExercise}>Finish Sport</button>\r\n             </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default ShoulderPressExercise;"],"names":["getLandmarkPosition","landmark","frameWidth","frameHeight","x","y","getLandmarkFeatures","poseLandmarks","feature","dictFeatures","nose","left","shoulder","elbow","wrist","hip","knee","ankle","foot","right","featureSet","Error","magnitude","v","Math","sqrt","findAngle","p1","p2","refPt","arguments","length","undefined","p1Ref","p2Ref","cosTheta","v1","v2","dot","theta","acos","max","min","round","PI","drawText","ctx","msg","options","boxWidth","textColor","backgroundColor","fontSize","fontFamily","paddingX","paddingY","font","textWidth","measureText","width","textHeight","parseInt","drawRoundedRect","height","radius","fillColor","fillStyle","beginPath","moveTo","arcTo","closePath","fill","fillText","drawCircle","position","color","arc","drawConnector","start","end","lineWidth","lineTo","strokeStyle","stroke","drawDottedLine","lineLength","numOfDots","floor","i","dotX","dotY","colors","blue","red","green","light_green","yellow","magenta","white","cyan","light_blue","webcamRef","useRef","canvasRef","cameraRef","poseRef","user","useAuth","navigate","useNavigate","correctRaiseCount","setCorrectRaiseCount","useState","incorrectRaiseCount","setIncorrectRaiseCount","feedback","setFeedback","isCameraActive","setIsCameraActive","isArmLiftedRef","thresholds","startCamera","current","video","cam","onFrame","async","send","image","onResults","useCallback","results","canvas","getContext","videoWidth","videoHeight","drawImage","landmarks","drawLandmark","text","leftShoulder","leftElbow","rightShoulder","rightElbow","leftShoulderAngle","rightShoulderAngle","correctLift","prevCount","useEffect","pose","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","minDetectionConfidence","minTrackingConfidence","close","stop","srcObject","getTracks","forEach","track","_jsx","_Fragment","children","className","_jsxs","Webcam","ref","style","display","maxWidth","maxHeight","top","scope","onClick","startExercise","resetExercise","userId","id","createdDate","Date","toISOString","response","sendResults","exerciseId","correct","incorrect","toast","success","error","message","sendResultsToBackend","clearRect","fillRect"],"sourceRoot":""}